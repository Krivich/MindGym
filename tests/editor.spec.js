import { test, expect } from '@playwright/test';
import {mockLLM} from "./helpers/mockLLM";

test.beforeEach(async ({ page }) => {
    await mockLLM(page);
});

test('–ö—É—Ä—Å –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', async ({ page }) => {
    const title = `–ö—É—Ä—Å ${Date.now()}`;
    const prompt = `–°–∏—Ç—É–∞—Ü–∏—è ${Date.now()}`;
    const answer = `–û—Ç–≤–µ—Ç ${Date.now()}`;

    await page.goto('/');
    await page.selectOption('#courseSelect', '__create__');
    await page.waitForSelector('#courseEditorContainer:visible');

    await page.fill('#courseTitle', title);
    await page.fill('#validationPrompt', '–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç');

    // –£–¥–∞–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
    page.once('dialog', dialog => {
        expect(dialog.type()).toBe('confirm');
        expect(dialog.message()).toContain('–£–¥–∞–ª–∏—Ç—å?');
        dialog.accept();
    });

    // –£–¥–∞–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
    await page.click('.remove-btn.ex-remove');


    // –ñ–¥—ë–º –∫–∞—Ä—Ç–æ—á–∫—É –º–æ–¥—É–ª—è
    const moduleCard = page.locator('.module-card').filter({
        has: page.locator('.module-title-input[value="–ú–æ–¥—É–ª—å 1"]')
    });
    await expect(moduleCard).toBeVisible();

// –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É —Å –¢–û–ß–ù–´–ú —Ç–µ–∫—Å—Ç–æ–º
    const addButton = moduleCard.getByText('+ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ', { exact: true });
    await expect(addButton).toBeVisible();
    await addButton.click();

    await page.fill('.ex-prompt', prompt);
    await page.fill('.ex-expected', answer);

    await page.click('#launchCourse');
    await page.waitForSelector('#chatWrapper');

    await expect(page).toHaveTitle(new RegExp(title));
    await expect(page.locator('.message.coach')).toContainText(prompt);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ç–∞–ª–æ–Ω
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await page.fill('#userInput', '–ª—é–±–æ–π');
    await page.click('#sendBtn');

    const coachMessages = page.locator('.message.coach');
    await expect(coachMessages.nth(-3)).toContainText('‚úÖ –í–µ—Ä–Ω–æ!');
    await expect(coachMessages.nth(-2)).toContainText('üìò –ö–∞–∫ –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å:');
    await expect(coachMessages.nth(-2)).toContainText(answer);
    await expect(coachMessages.last()).toContainText('–ù–æ–≤–∞—è —Å–∏—Ç—É–∞—Ü–∏—è...\n');

});