import { test, expect } from '@playwright/test';
import { mockLLM } from './helpers/mockLLM.js';

test.beforeEach(async ({ page }) => {
    await mockLLM(page);
});

test('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —á–∞—Ç–µ', async ({ page }) => {
    const userAnswer = `–¢–µ—Å—Ç ${Date.now()}`;
    await page.goto('/#emotions');
    await page.waitForSelector('#chatWrapper');

    // –ñ–¥—ë–º –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    await expect(page.locator('.message.coach')).toContainText('–¢—ã –ø–æ–ª—É—á–∏–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Ç–µ–ø–ª–æ –≤ –≥—Ä—É–¥–∏. –ß—Ç–æ —ç—Ç–æ?');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await page.fill('#userInput', userAnswer);
    await page.click('#sendBtn');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—è–≤–∏–ª—Å—è
    await expect(page.locator('.message.user')).toContainText(userAnswer);

    const coachMessages = page.locator('.message.coach');
    await expect(coachMessages.nth(-3)).toContainText('‚úÖ –í–µ—Ä–Ω–æ!');
    await expect(coachMessages.nth(-2)).toContainText('üìò –ö–∞–∫ –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å:');
    await expect(coachMessages.nth(-2)).toContainText('–†–∞–¥–æ—Å—Ç—å');
    await expect(coachMessages.last()).toContainText('–°–µ—Ä–¥—Ü–µ –∫–æ–ª–æ—Ç–∏—Ç—Å—è, –ª–∞–¥–æ–Ω–∏ –ø–æ—Ç–µ—é—Ç, –∏ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –ø–µ—Ä–µ–¥ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º. –ß—Ç–æ —Ç—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—à—å?');
});